---
    - name: "Install dependencies for mysqldb module"
      ansible.builtin.package:
        name:
          - python3
          - python3-pip
        state: present
   
    - name: "Install PIP module"
      pip:
        name: PyMySQL 

    - name: "Install MariaDB"
      ansible.builtin.package:
        name:
          - mariadb-server
          - mariadb-client
        state: present
      when: ansible_os_family == "Debian"
   
    - name: "Install MariaDB on Rocky"
      ansible.builtin.package:
        name:
          - mariadb-server
          - mariadb
        state: present
      when: ansible_os_family == "RedHat"
    
    - name: "Enable mariadb service on rocky"
      ansible.builtin.service:
        name: mariadb
        enabled: yes
        state: started
    
    - name: Create database user with password and all database privileges and 'WITH GRANT OPTION'
      mysql_user:
        login_user: "{{ sql_login_user }}"
        login_password: "{{ sql_login_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: "{{ sql_new_user }}"
        password: "{{ sql_new_user_password  }}"
        priv: '*.*:ALL,GRANT'
        state: present
      when: ansible_os_family == "Debian"
  
    - name: Create database user with password and all database privileges and 'WITH GRANT OPTION'
      mysql_user:
        login_user: "{{ sql_login_user }}"
        login_password: 
        name: "{{ sql_new_user }}"
        password: "{{ sql_new_user_password  }}"
        priv: '*.*:ALL,GRANT'
        state: present
      when: ansible_os_family == "RedHat"
         
    - name: Copy .sql file 
      copy:
        src: resources/tables.sql
        dest: /tmp/tables.sql
    
    - name: insert tables to database
      community.mysql.mysql_db:
        name: "{{  sql_database_name  }}"
        login_user: "{{ sql_new_user }}"
        login_password: "{{ sql_new_user_password  }}"
        state: import
        target: /tmp/tables.sql
# tasks file for mariadb
